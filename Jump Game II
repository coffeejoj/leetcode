//============================================================================
// Given an array of non-negative integers, you are initially positioned at
// the first index of the array.
//
// Each element in the array represents your maximum jump length at that
// position.
//
// Your goal is to reach the last index in the minimum number of jumps.
//
// For example:
// Given array A = [2,3,1,1,4]
//
// The minimum number of jumps to reach the last index is 2. (Jump 1 step
// from index 0 to 1, then 3 steps to the last index.)
//
// Complexity
// O(n)
//============================================================================

class Solution {
public:
    int jump(int A[], int n) {
        int m=0; int i=0; int max_pos=0; int cnt=0;
        for(i=0;i<=m&&i<n;i++) {
            m=max(m, i+A[i]);
            if (i==max_pos && i<n-1) {
                max_pos=m;
                cnt++;
            }
        }
        return cnt;
    }
};