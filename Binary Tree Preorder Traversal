/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
void func(TreeNode *cur, vector<int> &res)
{
    if (cur==NULL) return;
    res.push_back(cur->val);
    func(cur->left, res);
    func(cur->right, res);
}

class Solution {
public:
    vector<int> preorderTraversal(TreeNode *root) {
        vector<int>  res;
        func(root, res);
        return res;
    }
};

class Solution {
public:
    vector<int> preorderTraversal(TreeNode *root) {
        vector<int>  res;
        stack<TreeNode *> st;
        st.push(root);
        while(!st.empty()) {
            root=st.top();
            st.pop();
            if (root==NULL) continue;
            res.push_back(root->val);
            st.push(root->right);
            st.push(root->left);
        }
        return res;
    }
};