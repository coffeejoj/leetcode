struct TreeLinkNode {
    int val;
    TreeLinkNode *left, *right, *next;
    TreeLinkNode(int x) : val(x), left(NULL), right(NULL), next(NULL) {}
};

void func(TreeLinkNode *root)
{
    if(root==NULL) return;
    if(root->left) {
        if(root->right) root->left->next=root->right;
        else {
            TreeLinkNode *cur=root->next;
            while(cur) {
                if (cur->left){ root->left->next=cur->left; break;}
                else if(cur->right){ root->left->next=cur->right; break;}
                cur=cur->next;
            }
        }
        
    }
    if(root->right) {
        TreeLinkNode *cur=root->next;
        while(cur) {
            if (cur->left){ root->right->next=cur->left; break;}
            else if(cur->right){ root->right->next=cur->right; break;}
            cur=cur->next;
        }
    }
    func(root->right);
    func(root->left);
}

class Solution {
public:
    void connect(TreeLinkNode *root) {
        func(root);
    }
};