bool is_palindrome(string s, int i, int j)
{
    while(i<j) {
        if (s[i++]!=s[j--]) return false;
    }
    return true;
    
}

void func(int index, string s, vector<string> &save, vector<vector<string> > &res)
{
    if (index==s.length()) {
        res.push_back(save);
        return;
    }
    for(int i=index;i<s.length();i++) {
        if (is_palindrome(s, index, i)) {
            save.push_back(s.substr(index, i-index+1));
            func(i+1, s, save, res);
            save.pop_back();
        }
    }
}

class Solution {
public:
    vector<vector<string> > partition(string s) {
        vector<vector<string> >res;
        vector<string> save;
        func(0, s, save, res);
        return res;
    }
};