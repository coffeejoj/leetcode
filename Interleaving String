//============================================================================
// Interleaving String
// Given s1, s2, s3, find whether s3 is formed by the interleaving of s1 and s2.
//
// For example,
// Given:
// s1 = "aabcc",
// s2 = "dbbca",
//
// When s3 = "aadbbcbcac", return true.
// When s3 = "aadbbbaccc", return false.
//============================================================================

class Solution {
 public:
  bool isInterleave(string s1, string s2, string s3) {
    int n1 = s1.size(); 
    int n2 = s2.size(); 
    int n3 = s3.size();
    if(n1 + n2 != n3) return false;
    vector<vector<bool> > v(n1+1, vector<bool>(n2+1, false));
    v[0][0] = true;
    for(int i = 1; (i <= n1) && (s1[i-1] == s3[i-1]); i++) v[i][0] = true;      
    for(int i = 1; (i <= n2) && (s2[i-1] == s3[i-1]); i++) v[0][i] = true;
    for(int i1 = 1; i1 <= n1; i1++) 
      for(int i2 = 1; i2 <= n2; i2++) 
        v[i1][i2] = (v[i1-1][i2] &&(s3[i1+i2-1] == s1[i1-1])) ||((v[i1][i2-1]) && (s3[i1+i2-1] == s2[i2-1]));
    return v[n1][n2];
  }
};