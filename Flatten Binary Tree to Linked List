struct TreeNode {
    int val;
    TreeNode *left;
    TreeNode *right;
    TreeNode(int x) : val(x), left(NULL), right(NULL) {}
};

TreeNode *func(TreeNode *root)
{
    if(root==NULL) return NULL;
    if(root->left==NULL &&root->right==NULL) return root;
    TreeNode *left=root->left;
    TreeNode *right=root->right;
    if(left) {
        root->left=NULL;
        root->right=left;
        root=func(left);
        root->right=right;
    }
    if(right) {
        return func(right);
    } else return root;
}

class Solution {
public:
    void flatten(TreeNode *root) {
        func(root);
    }
};