//============================================================================
// Longest Consecutive Sequence
// Given an unsorted array of integers, find the length of the longest
// consecutive elements sequence.
//
// For example,
// Given [100, 4, 200, 1, 3, 2],
// The longest consecutive elements sequence is [1, 2, 3, 4]. Return its
// length: 4.
//
// Your algorithm should run in O(n) complexity.
//============================================================================

class Solution {
public:
    int longestConsecutive(vector<int> &num) {
        map<int, int> save; int res=0;
        for(int i=0;i<num.size();i++) {
            int cur=num[i];
            if(save.find(cur)==save.end()) {
                save[cur]=1;
                if(save.find(cur+1)!=save.end()) save[cur]+=save[cur+1];
                if(save.find(cur-1)!=save.end()) save[cur]+=save[cur-1];
                if(save.find(cur+1)!=save.end()) save[cur+save[cur+1]]=save[cur];
                if(save.find(cur-1)!=save.end()) save[cur-save[cur-1]]=save[cur];
                res=max(res, save[cur]);
            }
        }
        return res;
    }
};