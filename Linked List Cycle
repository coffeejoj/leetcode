//============================================================================
// Linked List Cycle
// Given a linked list, determine if it has a cycle in it.
//
// Follow up:
// Can you solve it without using extra space?
//
// Complexity
// O(n)
//============================================================================

struct ListNode {
    int val;
    ListNode *next;
    ListNode(int x) : val(x), next(NULL) {}
};

class Solution {
public:
    bool hasCycle(ListNode *head) {
        ListNode *step1=head;
        ListNode *step2=head;
        while(step1 && step2 && step2->next) {
            step1=step1->next;
            step2=step2->next->next;
            if(step1 !=NULL && step1==step2) return true;
        }
        return false;
    }
};