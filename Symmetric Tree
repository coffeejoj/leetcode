struct TreeNode {
    int val;
    TreeNode *left;
    TreeNode *right;
    TreeNode(int x) : val(x), left(NULL), right(NULL) {}
};
 
bool func(TreeNode *left, TreeNode *right)
{
    if (!left || !right) {
        if (!left && !right) return true;
        else return false;
    }
    if (left->val!=right->val) return false;
    else return (func(left->left, right->right) && func(left->right, right->left));
}

class Solution {
public:
    bool isSymmetric(TreeNode *root) {
        if(root==NULL) return true;
        return func(root->left, root->right);
    }
};