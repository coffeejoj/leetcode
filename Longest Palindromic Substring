string func(string &s, int even)
{
    int mi=0; int mj=-1;
    for(int i=0;i<s.length();i++) {
        int k=0;
        while((i+k+even<s.length()) && (i-k>=0) && (s[i+k+even]==s[i-k]))k++;
        if(--k>mj) {
            mi=i; mj=k;
        }
    }
    return s.substr(mi-mj,2*mj+1+even);
}

class Solution {
public:
    string longestPalindrome(string s) {
        string res_even=func(s, 1);
        string res_odd=func(s, 0);
        if(res_even.length()>res_odd.length()) return res_even;
        else return res_odd;
    }
};